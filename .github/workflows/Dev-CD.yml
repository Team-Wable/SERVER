name: Dev-CD

on:
  push:
    branches: [ "develop" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: WableServer

    steps: 
    - name: 체크아웃
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: application.yaml 생성
      run: | 
          echo "${{ secrets.APPLICATION }}" > src/main/resources/application.yaml
      working-directory: ${{ env.working-directory }}

    - name: fire-base.json 생성
      id: create-json
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "fire-base.json"
        json: ${{ secrets.FIRE_BASE_DEV }}
        dir: 'WableServer/src/main/resources/'

    - name: fire-base.json 파일 확인
      run: |
        if [ -f "src/main/resources/fire-base.json" ]; then
          echo "fire-base.json 파일이 존재합니다."
          cat src/main/resources/fire-base.json
        else
          echo "fire-base.json 파일이 존재하지 않습니다."
          exit 1
        fi
      working-directory: ${{ env.working-directory }}

    - name: 빌드
      run: |
          chmod +x gradlew
          ./gradlew build -x test
      working-directory: ${{ env.working-directory }}
      shell: bash

######## 여기까지는 CI.yaml과 동일 #########

    - name: docker build 가능하도록 환경 설정
      uses: docker/setup-buildx-action@v2.9.1

    - name: docker hub에로그인
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
        password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

    - name: docker image 빌드 및 푸시
      run: |
        docker build --platform linux/amd64 -t dontbedocker/wable-dev -f Dockerfile-Dev .
        docker push dontbedocker/wable-dev
      working-directory: ${{ env.working-directory }}

  deploy-cd:      
    needs: deploy-ci
    runs-on: ubuntu-22.04

######## 여기까지는 기존 CD.yaml과 동일 #########

    steps:    
    - name: 도커 컨테이너 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEVELOP_SERVER_IP }}
        username: ${{ secrets.DEVELOP_SERVER_USER }}
        key: ${{ secrets.DEVELOP_SERVER_KEY }}
        script: |
          cd ~
          sudo ./deploy.sh
          
